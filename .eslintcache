[{"C:\\workspace\\ui\\src\\index.tsx":"1","C:\\workspace\\ui\\src\\reportWebVitals.ts":"2","C:\\workspace\\ui\\src\\App.tsx":"3","C:\\workspace\\ui\\src\\button\\index.ts":"4","C:\\workspace\\ui\\src\\button\\Directive.tsx":"5","C:\\workspace\\ui\\src\\button\\Group.tsx":"6","C:\\workspace\\ui\\src\\button\\Button.tsx":"7","C:\\workspace\\ui\\src\\helper.ts":"8","C:\\workspace\\ui\\src\\pager\\Pager.tsx":"9","C:\\workspace\\ui\\src\\imports.ts":"10","C:\\workspace\\ui\\src\\icon\\index.tsx":"11"},{"size":501,"mtime":1609600190217,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":407,"mtime":1609665214225,"results":"15","hashOfConfig":"13"},{"size":116,"mtime":1608976735940,"results":"16","hashOfConfig":"13"},{"size":2827,"mtime":1609660887969,"results":"17","hashOfConfig":"13"},{"size":529,"mtime":1609035784788,"results":"18","hashOfConfig":"13"},{"size":1624,"mtime":1608987519559,"results":"19","hashOfConfig":"13"},{"size":2660,"mtime":1609639058242,"results":"20","hashOfConfig":"13"},{"size":3501,"mtime":1609073505144,"results":"21","hashOfConfig":"13"},{"size":50,"mtime":1609660964737,"results":"22","hashOfConfig":"13"},{"size":1167,"mtime":1609664948080,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"l8gmid",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\workspace\\ui\\src\\index.tsx",[],["52","53"],"C:\\workspace\\ui\\src\\reportWebVitals.ts",[],"C:\\workspace\\ui\\src\\App.tsx",["54","55","56"],"import React, { Component } from \"react\";\nexport default class App extends Component {\n  state = {\n    current: 1,\n    size: 10,\n    total: 90,\n    arr: [1, 2, 3, 4],\n  };\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        // arr: [1, 2, 3, 4],\n      });\n    }, 1000);\n  }\n  render() {\n    const { current, size, total } = this.state;\n    return <div className=\"App\"></div>;\n  }\n}\n","C:\\workspace\\ui\\src\\button\\index.ts",[],["57","58"],"C:\\workspace\\ui\\src\\button\\Directive.tsx",["59"],"C:\\workspace\\ui\\src\\button\\Group.tsx",["60"],"import cx from \"classnames\";\nimport { FC } from \"react\";\nimport { Namespace } from \"../helper\";\nimport { IButtonSize } from \"./Directive\";\n\nconst ns = new Namespace(\"bgroup\");\nexport interface IButtonGroupProps extends React.HtmlHTMLAttributes<HTMLDivElement> {\n  radius?: IButtonSize | \"round\";\n}\nexport const ButtonGroup: FC<IButtonGroupProps> = ({ className, ...props }) => (\n  <div radius={props.radius} className={ns.cx({ [ns.m(props.radius!)]: !!props.radius }, className)} {...props}></div>\n);\nexport default ButtonGroup;\n","C:\\workspace\\ui\\src\\button\\Button.tsx",[],"C:\\workspace\\ui\\src\\helper.ts",[],["61","62"],"C:\\workspace\\ui\\src\\pager\\Pager.tsx",["63","64","65"],"import { Component, ReactNode } from \"react\";\nimport Button from \"../button\";\nimport { IBaseProps, makePager, pagerCtrl } from \"../helper\";\nimport { Namespace, cx } from \"../helper\";\n\nconst ns = new Namespace(\"pager\");\nexport type TPageChangeCallback = (detail: Required<Pick<IPagerProps, \"current\" | \"size\">>) => any;\nexport type TPageFormater = (total: number, size: number, current: number) => ReactNode;\nexport type IPagerProps = IBaseProps &\n  Partial<{\n    current: number;\n    total: number;\n    size: number;\n    pages: number;\n    max: number;\n    step: number;\n    sizeOption: number[];\n    jumper: boolean;\n    buttonClassName: string;\n    formater: TPageFormater;\n    onChange: TPageChangeCallback;\n    button: ReactNode;\n  }>;\n\nexport class Pager extends Component<Required<IPagerProps>> {\n  static defaultProps: IPagerProps = {\n    current: 1,\n    total: 0,\n    size: 10,\n    max: 10,\n    jumper: true,\n    step: 10,\n  };\n  state = {\n    pages: Math.ceil(this.props.total / this.props.size),\n  };\n  constructor(props: Required<IPagerProps>) {\n    super(props);\n    // this.handlerClick = this.handlerClick.bind(this);\n  }\n  handlerClick: TPageChangeCallback = (detail) => {\n    let { step, current: cur } = this.props;\n    let { size, current } = detail;\n    if (cur === current) return;\n    const { pages } = this.state;\n    if (current === pagerCtrl.UP) {\n      cur -= step;\n    } else if (current === pagerCtrl.DOWN) {\n      cur += step;\n    } else if (current === pagerCtrl.PREV) {\n      cur -= 1;\n    } else if (current === pagerCtrl.NEXT) {\n      cur += 1;\n    } else {\n      cur = current;\n    }\n    cur = cur < 1 ? 1 : cur > pages ? pages : cur;\n    this.props.onChange({ size, current: cur });\n  };\n  componentDidMount() {}\n  componentWillUnmount() {}\n  render() {\n    let {\n      className,\n      style,\n      total,\n      current,\n      size,\n      sizeOption,\n      jumper,\n      max,\n      buttonClassName,\n      formater: format,\n      onChange,\n      button,\n    } = this.props;\n\n    const classes = ns.cx(className);\n    const { pages } = this.state;\n    let ary = makePager(current, pages, max);\n    return (\n      <div className={classes} style={style}>\n        <div className={ns.e(\"name\")}>{format ? format(total, size, current) : `共${total}条，每页${size}条`}</div>\n        {sizeOption && (\n          <select>\n            {sizeOption.map((i) => (\n              <option key={i} value={i}>\n                {i}\n              </option>\n            ))}\n          </select>\n        )}\n        {ary.map((item) => (\n          <Button\n            className={cx(\n              {\n                [ns.e(\"active\")]: item === current,\n                [ns.e(\"prev\")]: item === pagerCtrl.PREV,\n                [ns.e(\"next\")]: item === pagerCtrl.NEXT,\n                [ns.e(\"up\")]: item === pagerCtrl.UP,\n                [ns.e(\"down\")]: item === pagerCtrl.DOWN,\n              },\n              buttonClassName\n            )}\n            disabled={(item === pagerCtrl.PREV && current === 1) || (item === pagerCtrl.NEXT && current === pages)}\n            key={item}\n            onClick={() => this.handlerClick({ size, current: item })}\n          >\n            {item}\n          </Button>\n        ))}\n        {/* <Button disabled={current === 1} className={ns.e(\"prev\")} icon=\"abc\" /> */}\n        {jumper && (\n          <div>\n            跳至：\n            <input placeholder={current.toString()} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Pager;\n","C:\\workspace\\ui\\src\\imports.ts",[],"C:\\workspace\\ui\\src\\icon\\index.tsx",["66"],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":17,"column":13,"nodeType":"73","messageId":"74","endLine":17,"endColumn":20},{"ruleId":"71","severity":1,"message":"75","line":17,"column":22,"nodeType":"73","messageId":"74","endLine":17,"endColumn":26},{"ruleId":"71","severity":1,"message":"76","line":17,"column":28,"nodeType":"73","messageId":"74","endLine":17,"endColumn":33},{"ruleId":"67","replacedBy":"77"},{"ruleId":"69","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":69,"column":6,"nodeType":"81","endLine":69,"endColumn":8,"suggestions":"82"},{"ruleId":"71","severity":1,"message":"83","line":1,"column":8,"nodeType":"73","messageId":"74","endLine":1,"endColumn":10},{"ruleId":"67","replacedBy":"84"},{"ruleId":"69","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":37,"column":3,"nodeType":"88","messageId":"89","endLine":40,"endColumn":4},{"ruleId":"71","severity":1,"message":"90","line":74,"column":7,"nodeType":"73","messageId":"74","endLine":74,"endColumn":15},{"ruleId":"71","severity":1,"message":"91","line":75,"column":7,"nodeType":"73","messageId":"74","endLine":75,"endColumn":13},{"ruleId":"92","severity":1,"message":"93","line":30,"column":19,"nodeType":"94","endLine":30,"endColumn":61},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"@typescript-eslint/no-unused-vars","'current' is assigned a value but never used.","Identifier","unusedVar","'size' is assigned a value but never used.","'total' is assigned a value but never used.",["95"],["96"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'disabled'. Either include it or remove the dependency array.","ArrayExpression",["97"],"'cx' is defined but never used.",["95"],["96"],"@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'onChange' is assigned a value but never used.","'button' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},"Update the dependencies array to be: [disabled]",{"range":"100","text":"101"},[2017,2019],"[disabled]"]